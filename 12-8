12/8 notes

Software is a program or set of programs containing instructions that provide desired functionality. And Engineering is the process of designing and building something that serves a particular purpose and finds a cost-effective solution to problems.

Software Engineering is the process of designing, developing, testing, and maintaining software. It is a systematic and disciplined approach to software development that aims to create high-quality, reliable, and maintainable software. Software engineering includes a variety of techniques, tools, and methodologies, including requirements analysis, design, testing, and maintenance.



Key Principles of Software Engineering

Modularity: Breaking the software into smaller, reusable components that can be developed and tested independently.
Abstraction: Hiding the implementation details of a component and exposing only the necessary functionality to other parts of the software.
Encapsulation: Wrapping up the data and functions of an object into a single unit, and protecting the internal state of an object from external modifications.
Reusability: Creating components that can be used in multiple projects, which can save time and resources.
Maintenance: Regularly updating and improving the software to fix bugs, add new features, and address security vulnerabilities.
Testing: Verifying that the software meets its requirements and is free of bugs.
Design Patterns: Solving recurring problems in software design by providing templates for solving them.
Agile methodologies: Using iterative and incremental development processes that focus on customer satisfaction, rapid delivery, and flexibility.
Continuous Integration & Deployment: Continuously integrating the code changes and deploying them into the production environment.
Software engineering is a rapidly evolving field, and new tools and technologies are constantly being developed to improve the software development process. By following the principles of software engineering and using the appropriate tools and methodologies, software developers can create high-quality, reliable, and maintainable software that meets the needs of its users.

Software Engineering is mainly used for large projects based on software systems rather than single programs or applications. The main goal of Software Engineering is to develop software applications for improving quality,  budget, and time efficiency. Software Engineering ensures that the software that has to be built should be consistent, correct, also on budget, on time, and within the required requirements.



Main Attributes of Software Engineering

Software Engineering is a systematic, disciplined, quantifiable study and approach to the design, development, operation, and maintenance of a software system. There are Four main Attributes of Software Engineering.

Efficiency
Reliability
Robustness
Maintainability
Dual Role of Software

There is a dual role of software in the industry. The first one is as a product and the other one is as a vehicle for delivering the product. We will discuss both of them.

1. As a product

It delivers computing potential across networks of Hardware.
It enables the Hardware to deliver the expected functionality.
It acts as an information transformer because it produces, manages, acquires, modifies, displays, or transmits information.
2. As a vehicle for delivering a product

It provides system functionality (e.g., payroll system)
It controls other software (e.g., an operating system)
It helps build other software (e.g., software tools)
Objectives of Software Engineering

Maintainability: It should be feasible for the software to evolve to meet changing requirements.
Efficiency: The software should not make wasteful use of computing devices such as memory, processor cycles, etc.
Correctness: A software product is correct if the different requirements specified in the SRS Document have been correctly implemented.
Reusability: A software product has good reusability if the different modules of the product can easily be reused to develop new products.
Testability: Here software facilitates both the establishment of test criteria and the evaluation of the software with respect to those criteria.
Reliability: It is an attribute of software quality. The extent to which a program can be expected to perform its desired function, over an arbitrary time period.
Portability: In this case, the software can be transferred from one computer system or environment to another.
Adaptability: In this case, the software allows differing system constraints and the user needs to be satisfied by making changes to the software.
Interoperability: Capability of 2 or more functional units to process data cooperatively.
Program vs Software Product

Program

Software Product

A program is a set of instructions that are given to a computer in order to achieve a specific task.

Software is when a program is made available for commercial business and is properly documented along with its licensing.

Software Product = Program + Documentation + Licensing.

Program is one of the stages involved in the development of the software.

Software Development usually follows a life cycle, which involves the feasibility study of the project, requirement gathering, development of a prototype, system design, coding, and testing
